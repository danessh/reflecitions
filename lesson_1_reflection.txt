git commands

detached HEAD (current commit) state: removing a commit from the timelines of changes

-git diff: compare two commits (ORIG,NEW)
-git clone: copy entire Git respository
-git checkout: temporarily reset all respository files to a specific commit
-git log: shows the commits to a respository starting with most recent
-git init: creates a .git repository
-git status: shows files that have changed since last change
-git add: add files to the staging area
-git commit: opens editor
-git show: show changes between commit and parent
-git merge (branch to merge into, branch)
-git remote: view current remotes
-git remote add (remote name, remote url): adds remote repository from github
-git push (remote to send, local branch to push)

commit is a snapshot of a git respository
commits should be a logical step
staging area can bundle different commit stages
staging area holds a copy of the last commit

--staged: shows diff between staging area and repository
-a : shows hidden folders
--stat : gives statistics about which files have changed
q : to stop seeing stat
--graph: visualize branches
--oneline: easier to read
-b: creates a branchname
-d: delete
--abort: stop an action
-v: more information

git clone [remote url]
git diff [commit ID/branchname, commit ID/branchname]
git checkout [commit ID/branchname]
git add [filename]
git commit
git status
git log
git diff (no args): shows diffs between working directory and staging area
git reset --hard: discards changes in working directory and staging area
git branch (no args): shows existing branches
git branch [branchname]: creates a branch
git log --graph [branchname] [branchname]: visualize two branches
git checkout -b [branchname] : creates a branch and checks it out
git show [commit ID]
git merge [branchname, branchname]
git branch -d [branchname]: delete branch label
git log -n1 : shows one commit from the log
git remote -v : will show fetch and push url


flags
git log --stat
ls -a
git diff --staged
git log --graph --oneline
git merge -- abort
-n[0-9]